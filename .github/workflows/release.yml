name: release

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed

jobs:
  release:
    if: >-
      ${{ github.event.workflow_run.conclusion == 'success' &&
          (startsWith(github.event.workflow_run.head_branch, 'main') ||
           startsWith(github.event.workflow_run.head_branch, 'master')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.workflow_run.head_branch }}
      cancel-in-progress: true
    steps:
      - name: Download build artifacts
        uses: dawidd6/action-download-artifact@v3
        with:
          run_id: ${{ github.event.workflow_run.id }}
          repo: ${{ github.repository }}
          name: lg-ultragear-dimming-fix
          path: dist

      - name: Verify workflows passed (lint/format/test/build)
        id: verify
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const sha = context.payload.workflow_run.head_sha;
            const required = ['lint.yml','format.yml','test.yml','build.yml'];

            async function ok(file) {
              try {
                const {data} = await github.rest.actions.listWorkflowRuns({owner, repo, workflow_id: file, head_sha: sha, per_page: 1});
                if (!data.workflow_runs || data.workflow_runs.length === 0) return false;
                const run = data.workflow_runs[0];
                return run.conclusion === 'success';
              } catch (e) {
                core.warning(`Failed to query ${file}: ${e}`);
                return false;
              }
            }

            const results = {};
            for (const wf of required) { results[wf] = await ok(wf); }
            const failed = Object.entries(results).filter(([,v]) => !v).map(([k]) => k);
            if (failed.length) {
              core.setFailed(`Not all workflows passed for ${sha}. Missing/failed: ${failed.join(', ')}`);
            } else {
              core.notice('All required workflows passed. Proceeding to release.');
            }

      - name: Compute release version
        id: ver
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const year = new Date().getFullYear().toString();
            const rels = await github.paginate(github.rest.repos.listReleases, { owner: context.repo.owner, repo: context.repo.repo, per_page: 100 });
            const nums = rels
              .map(r => r.tag_name)
              .filter(t => typeof t === 'string' && t.startsWith(year + '.'))
              .map(t => parseInt(t.split('.')[1], 10))
              .filter(n => Number.isFinite(n));
            const next = (nums.length ? Math.max(...nums) + 1 : 1);
            const version = `${year}.${next}`;
            core.setOutput('version', version);
            core.notice(`Next version: ${version}`);

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.version }}
          name: ${{ steps.ver.outputs.version }}
          draft: false
          prerelease: false
          files: |
            dist/lg-ultragear-dimming-fix.zip
            dist/install-lg-ultragear-no-dimming.exe
