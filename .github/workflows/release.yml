name: release

on:
  workflow_run:
    workflows: ["build"]
    types:
      - completed

jobs:
  release:
    if: >-
      ${{ github.event.workflow_run.conclusion == 'success' &&
          (startsWith(github.event.workflow_run.head_branch, 'main') ||
           startsWith(github.event.workflow_run.head_branch, 'master')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build artifacts
        uses: dawidd6/action-download-artifact@v3
        with:
          run_id: ${{ github.event.workflow_run.id }}
          repo: ${{ github.repository }}
          name: lg-ultragear-dimming-fix
          path: dist

      - name: Compute release version
        id: ver
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const year = new Date().getFullYear().toString();
            const rels = await github.paginate(github.rest.repos.listReleases, { owner: context.repo.owner, repo: context.repo.repo, per_page: 100 });
            const nums = rels
              .map(r => r.tag_name)
              .filter(t => typeof t === 'string' && t.startsWith(year + '.'))
              .map(t => parseInt(t.split('.')[1], 10))
              .filter(n => Number.isFinite(n));
            const next = (nums.length ? Math.max(...nums) + 1 : 1);
            const version = `${year}.${next}`;
            core.setOutput('version', version);
            core.notice(`Next version: ${version}`);

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.ver.outputs.version }}
          name: ${{ steps.ver.outputs.version }}
          draft: false
          prerelease: false
          files: |
            dist/lg-ultragear-dimming-fix.zip
            dist/install-lg-ultragear-no-dimming.exe

