name: build

on:
  push:
    branches: [ main, master, '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Trust PowerShell Gallery
        shell: pwsh
        run: |
          Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted

      - name: Install packager (ps2exe)
        shell: pwsh
        run: |
          Install-Module ps2exe -Scope CurrentUser -Force -ErrorAction Stop

      - name: Build executable
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path dist -Force | Out-Null
          $in  = 'install-lg-ultragear-no-dimming.ps1'
          $out = 'dist\install-lg-ultragear-no-dimming.exe'
          if (Test-Path $in) {
            Invoke-ps2exe -inputFile $in -outputFile $out -x64 -noConsole:$false -title 'LG UltraGear No-Dimming Installer' -description 'Automated installer for LG UltraGear no-dimming ICC profile.' -embedFiles 'lg-ultragear-full-cal.icm'
          } else {
            throw "Missing $in"
          }

      - name: Build zip package
        shell: pwsh
        run: |
          $items = @(
            'install-lg-ultragear-no-dimming.ps1',
            'install-full-auto.bat',
            'lg-ultragear-full-cal.icm',
            'readme.md',
            'license.md',
            'dist\install-lg-ultragear-no-dimming.exe'
          ) | Where-Object { Test-Path $_ }
          $zip = Join-Path (Resolve-Path dist) 'lg-ultragear-dimming-fix.zip'
          if (Test-Path $zip) { Remove-Item $zip -Force }
          Compress-Archive -Path $items -DestinationPath $zip -CompressionLevel Optimal
          Write-Host "Created package: $zip"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lg-ultragear-dimming-fix
          path: |
            dist/lg-ultragear-dimming-fix.zip
            dist/install-lg-ultragear-no-dimming.exe
